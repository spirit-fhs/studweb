<div id="map_canvas" style="width: 100%; height: 300px;margin-bottom:10px;"></div>
<div id="msg" style="margin-top:10px;"></div>


<script type="text/javascript"
	src="http://maps.google.com/maps/api/js?sensor=true"></script>
<script type="text/javascript">
// checks if the geolocation api is available
if(typeof navigator.geolocation !== 'undefined'){
	//initialize some variable
	var map;
	var infowindow = new google.maps.InfoWindow();
	var geocoder;
	/* - initialize the google maps api with jQuery dom.ready
	 * - initailize the map with the FHS buildung as
	 *   default location
	 **/
	$(document).ready(function(){
		// initialize the gecoder to get later the address of the useres location
		geocoder = new google.maps.Geocoder();

		// the default/ starting point of the map
	    var latlng = new google.maps.LatLng(50.715313, 10.467457);

	    // some special options for the map
	    var myOptions = {
	      zoom: 18,
	      center: latlng,
	      mapTypeId: google.maps.MapTypeId.SATELLITE
	    };

	    // creating the map
	    map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

	    //adding the button to search for the location
	    $('#map_canvas').after('<form style="text-align:center"><input type="button" id="searchButton" value="Zeig mir wo ich bin!" onclick="findMe();"></form>');
	    	
	});
	
	
	/*
	 *	will be called when somebody clicks on the button
	 *  
	 **/
	function findMe(){
		// defining the success callback function
		var successCallback = function(position){
			// get the latitude and longitude from the geolocation api
			var myLatitude = position.coords.latitude;
			var myLongitude = position.coords.longitude;

			/* creating a new point with the location data 
			 * of the user and set it to the map
			 **/
			var newPoint = new google.maps.LatLng(myLatitude, myLongitude)
			map.setCenter(newPoint,15);
			
			// Needed to add the address in an infoWindow
			if (geocoder) {
			      geocoder.geocode({'latLng': newPoint}, function(results, status) {
			        if (status == google.maps.GeocoderStatus.OK) {
			          if (results[1]) {
			            map.setZoom(15);
			            // creating a marker for the location
			            marker = new google.maps.Marker({
			                position: newPoint, 
			                map: map
			            });

			            // insert the address data
			            infowindow.setContent(results[0].formatted_address);
			            infowindow.open(map, marker);
			          }
			        } else {
			          alert("Geocoder failed due to: " + status);
			        }
			      });
			    }

			// show all informations that have been collected by the browser
			var msg = 'Hier sind alle Informationen die jetzt aus deinem Browser ausgelesen wurden:<hr>' + 
			'Zeit: ' + position.timestamp + '<br>' +
			'Geographische Breite: ' + position.coords.latitude + '<br>' +
			'Geographische Länge: ' + position.coords.longitude + '<br>' +
			'Höhe: ' + position.coords.altitude + '<br>' +
			'Präzision: ' + position.coords.accuracy + '<br>' +
			'Präzision der Höhenmessung: ' + position.coords.altitudeAccuracy + '<br>' +
			'Richtung: ' + position.coords.heading + '<br>' +
			'Geschwindigkeit: ' + position.coords.speed + '<br>';

			$('#msg').html(msg);
		};
		// defining the error callback
		var errorCallback = function (error){
			switch(error.code) 
			{
				case error.TIMEOUT:
					alert ('Timeout');
					break;
				case error.POSITION_UNAVAILABLE:
					alert ('Position unavailable');
					break;
				case error.PERMISSION_DENIED:
					alert ('Permission denied');
					break;
				case error.UNKNOWN_ERROR:
					alert ('Unknown error');
					break;
			}
		};
		// defining some options for the geo api
		var options = {
			enableHighAccuracy: true, // Super-Präzisions-Modus
			timeout: 2000,            // Maximale Wartezeit
			maximumAge: 0             // Maximales akzeptiertes Cache-Alter
		};

		// call the geolocation api
		navigator.geolocation.getCurrentPosition(successCallback, errorCallback, options);
		/* How does it work in firefox?
		 * http://www.mozilla.com/en/firefox/geolocation/
		 **/
		

		
	}
}else{
	// is shown if the browser doesn't support the geolocation api
    $('#map_canvas').html('<h3>Sorry, aber dein Browser unterstützt die Geolocation API von HTML5 nicht!</h3>');
}
</script>